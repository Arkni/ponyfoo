#!/bin/bash

set -e

: ${PORT:="3666"}

npm run clean
npm run copy

DIST=".bin/public"
DOMAIN="http://ponyfoo.com"
ALL_CSS="$DIST/css/all.css"
CRITICAL_CSS=".bin/temp/critical.css"

# d3
browserify node_modules/d3 -s d3 | uglifyjs -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" > .bin/public/js/d3.js
browserify node_modules/d3-tip -s d3tip | uglifyjs -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" > .bin/public/js/d3-tip.js

# compile assets, routes
stylus client/css/all.styl -o $DIST/css --include-css --include client/css --compress
jadum views/**/*.jade -o .bin --no-debug --obj '{"basedir":"views"}'
taunus -o
browserify client/js/main.js | uglifyjs -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" -o $DIST/js/all.js

# compile inlined scripts
uglifyjs .bin/inline/javascript.js -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" -o .bin/inline/javascript.js
uglifyjs .bin/inline/styles.js -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" -o .bin/inline/styles.js
uglifyjs .bin/inline/fonts.js -m -c "comparisons=false,keep_fargs=true,unsafe=true,unsafe_comps=true,warnings=false" -b "ascii_only=true,beautify=false" -o .bin/inline/fonts.js

# critical css inlining. many slash, very escape.
LOGGING_LEVEL=info PORT=$PORT APP_REBUILD=0 NODE_ENV=development node app &
sleep 5
CRITICAL="$(phantomjs node_modules/penthouse/penthouse.js http://localhost:$PORT $ALL_CSS)"
CRITICAL_ESCAPED=$(echo $CRITICAL | sed -e 's/[\/#&]/\\&/g' -e 's/"/\\\\"/g')
LAYOUT=".bin/views/server/layout/layout.js"
echo "Gathered critical CSS, killing node app"
echo $CRITICAL > $CRITICAL_CSS
kill $!
sed -i -e "s#<style></style>#<style>$CRITICAL_ESCAPED</style>#" $LAYOUT
cleancss $ALL_CSS -o $ALL_CSS --s0
rm $CRITICAL_CSS

# asset hashing
reaver $DIST/img/* --manifest | scourge .bin/{views,public/{css,js}} --base-path $DIST --domain $DOMAIN
reaver $DIST/{css,js}/* --manifest | scourge .bin/{inline,views/server,public/,js} --base-path $DIST --domain $DOMAIN
